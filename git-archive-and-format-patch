#!/bin/bash

start_commit="$1"
if [ "$#" -ge 2 ]; then
	end_commit="$2"
else
	end_commit=HEAD
fi

output_directory="$PWD/archive-and-format-patch"

cd "$(git rev-parse --show-toplevel)"

merge_base="$(git merge-base "$start_commit" "$end_commit")"

[ -d "$output_directory" ] && rm -r "$output_directory"
mkdir "$output_directory"

# XXX git diff --diff-filter=D should only need to be called once
git diff --quiet --diff-filter=D "$merge_base" "$end_commit" ||
	git diff --diff-filter=D --name-only "$merge_base" "$end_commit" > "$output_directory/deleted-files"

# XXX git diff --diff-filter=AM should only need to be called once
git diff --quiet --diff-filter=AM "$merge_base" "$end_commit" ||
	git diff -z --diff-filter=AM --name-only "$merge_base" "$end_commit" |
		xargs -0 git archive -o "$output_directory/modified-and-new-files.zip" "$end_commit" --

git format-patch --quiet -o "$output_directory/patches" "$start_commit..$end_commit"
if [ "$(ls "$output_directory/patches" | wc -l)" -gt 1 ]; then
	zip -qj "$output_directory/patches"{.zip,/*.patch}
	git diff --no-textconv "$merge_base" "$end_commit" > "$output_directory/aggregate-patch.patch"
else
	cp "$output_directory/"{patches/*.patch,}
fi
rm -r "$output_directory/patches"
